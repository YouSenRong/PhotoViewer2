/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import PhotoFile.ListPhoto;
import java.awt.Color;
import myPanel.PhotoPanel;
import myPhoto.Photo;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.ListIterator;
import PhotoThread.PhotoThread;
import java.awt.event.ActionEvent;
import java.util.Calendar; 
import javax.swing.JDialog;

/**
 *
 * @author admin
 */
public class PhotoDialog extends javax.swing.JDialog {

    /**
     * Creates new form PhotoDialog
     */
    public PhotoDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        //this.listiterator = listPhoto.ListIterator();
        getContentPane().setBackground(Color.DARK_GRAY);
        setTitle("Photo Viewer");
        setBounds(350,50,1908,868);
        //setDefaultCloseOperation(JDialog.EXIT_ON_CLOSE);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photoPanel1 = new myPanel.PhotoPanel(photo);
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(250, 250, 211));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        photoPanel1.setPreferredSize(new java.awt.Dimension(1024, 768));

        javax.swing.GroupLayout photoPanel1Layout = new javax.swing.GroupLayout(photoPanel1);
        photoPanel1.setLayout(photoPanel1Layout);
        photoPanel1Layout.setHorizontalGroup(
            photoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1024, Short.MAX_VALUE)
        );
        photoPanel1Layout.setVerticalGroup(
            photoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 768, Short.MAX_VALUE)
        );

        jButton1.setText("上一张");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("播放/暂停");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("下一张");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(jButton1)
                .addGap(85, 85, 85)
                .addComponent(jButton2)
                .addGap(81, 81, 81)
                .addComponent(jButton3)
                .addContainerGap(281, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(photoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(photoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2, jButton3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here
        
        if(!isCreated)
        {   
            isCreated = true;
            photoThread = new PhotoThread(listiterator,photo,photoPanel1);
        }
       if(!isRunning)
        {
           
            photoThread.start();
        }
        else
        {
            photoThread.exit = false;
            isCreated = false;
        }
        isRunning = !isRunning;
       System.out.println(PhotoThread.activeCount());
        
        
        //Calendar c = Calendar.getInstance();
        //PhotoThread photoThread = new PhotoThread(listiterator,photo,photoPanel1);
        //PhotoThread photoThread = new PhotoThread(listiterator,photo,photoPanel1);
        //listiterator = photoThread.getListIterator();
        //System.out.println(PhotoThread.activeCount());

        
        
        /*while(listiterator.hasNext())
        {
            String str = listiterator.next().getPath().toString();
            //System.out.println(iterator.next().getPath().toString());
            //System.out.println(str);
            /*photo = new Photo(str);
            photoPanel1.show(photo);*/
            
            //second1 = c.get(Calendar.SECOND);
            //System.out.println(second1);
            /*while((second2-second1) < 4)
            {
                second2 = c.get(Calendar.SECOND);
                System.out.println(second2-second1);
            }*/
            //photoPanel1.show(photo);
            /*try  
            {  
                Thread.sleep(1000);  
            }  
            catch (InterruptedException e)  
            {  
            } 
            photoPanel1.show(photo);*/
           //photo = new Photo("D:\\photo\\dream.jpg");
           //photoPanel1.show(photo);
           //System.out.println(running);
           //second2 = c.get(Calendar.SECOND);
           //System.out.println(second2);
           /*time1 = System.currentTimeMillis();
           System.out.println(time1);
           while((time2 - time1) < 5000)
           {
                time2 = System.currentTimeMillis() ;
           //System.out.println(time2);
           }
           System.out.println(time2);
           jButton3.doClick();
           this.repaint();
        System.out.println("play end");*/
        
        
        //dispose();
        /*photo = new Photo("D:\\photo\\dream.jpg");
        photoPanel1.show(photo);
        */
        /*photo = new Photo("D:\\photo\\IMG_0121.jpg");
        photoPanel1.show(photo);*/
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(JBut3 && listiterator.hasNext())
        {
            listiterator.next();
            //listiterator.next();
            //JBut1 = true;
            JBut3 = false;
        }
        if(listiterator.hasNext())
        {

            String str = listiterator.next().getPath();
            System.out.println(str);
            photo = new Photo(str);
            photoPanel1.show(photo);
            photo = null;
            System.gc();
        }
        JBut1 = true;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(JBut1 && listiterator.hasPrevious())
        {
            listiterator.previous();
            //listiterator.previous();
            //JBut3 = true;
            JBut1 = false;
        }
        if(listiterator.hasPrevious())
        {
            String str = listiterator.previous().getPath();
            //System.out.println(iterator.next().getPath().toString());
            System.out.println(str);
            photo = new Photo(str);
            photoPanel1.show(photo);
            photo = null;
            System.gc();
            //photoPanel1.show(photo);
        }
        JBut3 = true;
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /*public void actionPerformed(ActionEvent e) {
        
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhotoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhotoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhotoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhotoDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PhotoDialog dialog = new PhotoDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    Photo photo = new Photo("D:\\photo\\IMG_0121.jpg");
    ArrayList<File> listPhoto = new ListPhoto().getListFiles("D:\\photo2");
    ListIterator<File> listiterator = listPhoto.listIterator();
    Boolean isRunning = false;
    Boolean isCreated = false;
    PhotoThread photoThread = null;
    Boolean JBut1 = false;
    Boolean JBut2 = false;
    Boolean JBut3 = false;
    //ListIterator<File> iterator = listPhoto.ListIterator();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private myPanel.PhotoPanel photoPanel1;
    // End of variables declaration//GEN-END:variables
}